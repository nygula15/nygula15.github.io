{"version":3,"sources":["Trading-components/TableColumns.jsx","Trading-components/TradingData.jsx","Trading-components/TradingTable.jsx","Calc-components/Bttn.jsx","Calc-components/Input.jsx","Calc-components/ClearButton.jsx","Calc-components/Calculator.jsx","NameAges.jsx","Home.jsx","Taxi-components/tallinn-tartu.png","Taxi-components/TallinnTartu.jsx","Mileage.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["tableColumns","tableData","id","picture","date","name","sizes","exchangeRate","quantity","TradingTable","className","map","columnName","item","src","alt","width","Bttn","props","val","children","isNaN","onClick","handleClick","Input","input","ClearButton","handleClear","Calculator","handleKeyboardInput","event","key","handleEqual","addToInput","setState","prevState","math","handleSin","handleCos","state","window","addEventListener","this","removeEventListener","React","Component","NameAges","useState","setTableData","setTableColumns","setName","age","setAge","fetchData","a","axios","get","response","console","log","data","Object","keys","error","useEffect","handleDelete","delete","handleSubmit","e","preventDefault","post","onSubmit","type","value","onChange","target","column","row","Home","TallinnTartu","TallinnTartuPNG","Mileage","formatDate","dateString","dateObject","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","toLowerCase","includes","App","to","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a11d439b.chunk.js","sourcesContent":["// TableColumns.jsx\r\n\r\nexport const tableColumns = [\r\n\r\n    'Picture',\r\n    'Date',\r\n    'Name',\r\n    'Sizes',\r\n    'Exchange Rate',\r\n    'Quantity',\r\n    // 'Total price (yuan)',\r\n    // 'Price per each (yuan)',\r\n    // 'Price per each (tenge)',\r\n    // 'Total price (tenge)',\r\n    // 'Delivery (KZ) for each',\r\n    // 'Total delivery',\r\n    // 'Total price with delivery',\r\n    // 'Rozn',\r\n    // 'Opt',\r\n    // 'Delivery total',\r\n    // 'Extra',\r\n    // 'Total',\r\n    // Add other column names as needed\r\n];\r\n","export const tableData = [\r\n    {\r\n      id: 1,\r\n      picture: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQEdGjKUVkqI5YX7LmRUyGkcm89hNMWGBgAgg&usqp=CAU',\r\n      date: '2023-07-06',\r\n      name: 'Product A',\r\n      sizes: 'S, M, L',\r\n      exchangeRate: 1.2,\r\n      quantity: 10,\r\n      // ... other data fields\r\n    },\r\n    {\r\n      id: 2,\r\n      picture: 'https://as2.ftcdn.net/v2/jpg/01/17/15/95/1000_F_117159514_xLOLl22WPAFOtdbjXQjWY0ZYmySjASyx.jpg',\r\n      date: '2023-07-07',\r\n      name: 'Product B',\r\n      sizes: 'M, L, XL',\r\n      exchangeRate: 1.5,\r\n      quantity: 5,\r\n      // ... other data fields\r\n    },\r\n    // ... more data entries\r\n  ];","import React from 'react';\r\nimport './TradingTable.css';\r\nimport { tableColumns } from './TableColumns';\r\nimport { tableData } from './TradingData'; \r\n\r\n\r\nconst TradingTable = () => {\r\n  return (\r\n    <div className='table-container'>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {/* getting columns from TableColumns.jsx */}\r\n            {tableColumns.map((columnName) => (\r\n              <th key={columnName}>{columnName}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Add table rows with data here */}\r\n          {tableData.map((item) => (\r\n            <tr key={item.id}>\r\n              <td>\r\n                <img src={item.picture} alt=\"Product\" width=\"100\" />\r\n              </td>\r\n              <td>{item.date}</td>\r\n              <td>{item.name}</td>\r\n              <td>{item.sizes}</td>\r\n              <td>{item.exchangeRate}</td>\r\n              <td>{item.quantity}</td>\r\n              {/* ...render remaining table data */}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradingTable;\r\n","import React from \"react\";\r\nimport './Bttn.css';\r\n\r\nconst isOperator = val => {\r\n    return !isNaN(val) || val === \".\" || val === \"=\";\r\n};\r\n\r\nexport const Bttn = props => (\r\n    <div className={`button-wrapper ${\r\n        isOperator(props.children) ? null : \"operator\"\r\n        }`}\r\n        onClick={()=>props.handleClick(props.children)}\r\n        >\r\n        {props.children}\r\n    </div>\r\n);","import React from \"react\";\r\nimport './Input.css';\r\n\r\nexport const Input = (props) => (\r\n    <div className=\"input\">{props.input}</div>\r\n);","import React from \"react\";\r\nimport './ClearButton.css';\r\n\r\nexport const ClearButton = (props) => (\r\n    <div className=\"clear-btn\" onClick={props.handleClear}>\r\n        {props.children}\r\n    </div>\r\n)","import React from 'react';\r\nimport { Bttn } from './Bttn';\r\nimport { Input } from './Input';\r\nimport { ClearButton } from './ClearButton';\r\nimport * as math from 'mathjs';\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            input: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyboardInput);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyboardInput);\r\n    }\r\n\r\n    handleKeyboardInput = (event) => {\r\n        const { key } = event;\r\n\r\n        // Check for valid keyboard input\r\n        if (!isNaN(key) || key === '.' || key === '+' || key === '-' || key === '*' || key === '/') {\r\n            this.addToInput(key);\r\n        } else if (key === 'Enter') {\r\n            this.handleEqual();\r\n        }\r\n    };\r\n\r\n    addToInput = (val) => {\r\n        this.setState((prevState) => ({\r\n            input: prevState.input + val\r\n        }));\r\n    };\r\n\r\n    handleEqual = () => {\r\n        this.setState((prevState) => ({\r\n            input: math.evaluate(prevState.input)\r\n        }));\r\n    };\r\n\r\n    handleSin = () => {\r\n        this.setState((prevState) => ({\r\n            input: math.sin(prevState.input)\r\n        }));\r\n    };\r\n\r\n    handleCos = () => {\r\n        this.setState((prevState) => ({\r\n            input: math.cos(prevState.input)\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calc-wrapper\">\r\n                <Input input={this.state.input}></Input>\r\n                <div className=\"row\">\r\n                    <Bttn handleClick={this.handleSin}>Sin</Bttn>\r\n                    <Bttn handleClick={this.handleCos}>Cos</Bttn>\r\n                    <ClearButton handleClear={() => this.setState({ input: '' })}>CE</ClearButton>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Bttn handleClick={this.addToInput}>7</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>8</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>9</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>/</Bttn>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Bttn handleClick={this.addToInput}>4</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>5</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>6</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>*</Bttn>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Bttn handleClick={this.addToInput}>1</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>2</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>3</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>+</Bttn>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Bttn handleClick={this.addToInput}>.</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>0</Bttn>\r\n                    <Bttn handleClick={this.handleEqual}>=</Bttn>\r\n                    <Bttn handleClick={this.addToInput}>-</Bttn>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './NameAges.css'; // Import the CSS file\r\n\r\nconst NameAges = () => {\r\n  // State to hold the data from the API\r\n  const [tableData, setTableData] = useState([]);\r\n  const [tableColumns, setTableColumns] = useState([]);\r\n\r\n  // State to handle the form input\r\n  const [name, setName] = useState('');\r\n  const [age, setAge] = useState('');\r\n\r\n  // Function to fetch data from the server\r\n  const fetchData = async () => {\r\n    try {\r\n      // Fetch data from the API endpoint\r\n      const response = await axios.get('/api/name_ages');\r\n      console.log('Response:', response.data);\r\n\r\n      // Extract table column names from the response\r\n      setTableColumns(Object.keys(response.data[0]));\r\n\r\n      // Update the table data with the fetched data\r\n      setTableData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  // Call the fetchData function when the component mounts\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Function to handle deletion of a record\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      // Send a DELETE request to the API to delete a record\r\n      await axios.delete(`/api/name_ages/${id}`);\r\n      console.log('Data deleted:', id);\r\n\r\n      // After successful deletion, fetch the data again to refresh the table\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error('Error deleting data:', error);\r\n    }\r\n  };\r\n\r\n  // Function to handle submission of the form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Send a POST request to the API to add a new record\r\n      const response = await axios.post('/api/name_ages', {\r\n        name: name,\r\n        age: age,\r\n      });\r\n      console.log('Response:', response.data);\r\n\r\n      // Reset the form fields and refresh the table data\r\n      setName('');\r\n      setAge('');\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error('Error posting data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>PostgreSQL Table - name_ages</h1>\r\n\r\n      {/* Form for adding a new name and age */}\r\n      <div className=\"form-container\">\r\n        <h2>Add a new name and age</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>\r\n              Name:\r\n              <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              Age:\r\n              <input type=\"number\" value={age} onChange={(e) => setAge(e.target.value)} />\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Table to display the data */}\r\n      <table className=\"table-container\">\r\n        <thead>\r\n          <tr>\r\n            {/* Display table column headers */}\r\n            {tableColumns.map((column) => (\r\n              <th key={column}>{column}</th>\r\n            ))}\r\n            <th className=\"action-cell\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Display table data rows */}\r\n          {tableData.map((row) => (\r\n            <tr key={row.id}>\r\n              {tableColumns.map((column) => (\r\n                <td key={column}>{row[column]}</td>\r\n              ))}\r\n              {/* \"Delete\" button for each record */}\r\n              <td className=\"action-cell\">\r\n                <button onClick={() => handleDelete(row.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameAges;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h1>Welcome to My Coding Journey</h1>\r\n      <p>\r\n        Aspiring Developer | Frontend and Backend Enthusiast\r\n      </p>\r\n      <h2>About Me</h2>\r\n      <p>\r\n        Hi, I'm [Your Name], a passionate learner on a mission to become a skilled developer in both frontend and backend technologies. I'm excited about the endless possibilities and creativity that coding offers.\r\n      </p>\r\n      <h2>My Goals</h2>\r\n      <ul>\r\n        <li>Mastering frontend technologies like HTML, CSS, and JavaScript to create beautiful and interactive user interfaces.</li>\r\n        <li>Building responsive and intuitive user experiences using modern frontend frameworks like React.</li>\r\n        <li>Exploring backend development with Node.js and popular frameworks like Express to create robust and scalable server-side applications.</li>\r\n        <li>Learning databases and working with SQL or NoSQL solutions like PostgreSQL and MongoDB.</li>\r\n        <li>Gaining experience in API development, integration, and RESTful architecture.</li>\r\n        <li>Continuously expanding my knowledge and keeping up with the latest trends and best practices in web development.</li>\r\n      </ul>\r\n      <h2>Join Me on This Journey</h2>\r\n      <p>\r\n        I'm excited to connect with like-minded individuals, collaborate on projects, and share knowledge. Let's learn and grow together in the world of coding!\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/tallinn-tartu.97103b50.png\";","import React from 'react';\r\nimport TallinnTartuPNG from './tallinn-tartu.png';\r\n\r\nconst TallinnTartu = () => {\r\n  return (\r\n    <div>\r\n      <h1>Tallinn-Tartu Route</h1>\r\n      <img src={TallinnTartuPNG} alt=\"Tallinn-Tartu\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TallinnTartu;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './NameAges.css'; // Import the CSS file\r\n\r\nconst Mileage = () => {\r\n  const [tableData, setTableData] = useState([]);\r\n  const [tableColumns, setTableColumns] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/mileage');\r\n        console.log('Response:', response.data); // Check if the data is being fetched correctly\r\n        setTableColumns(Object.keys(response.data[0])); // Use response.data[0] to get the first row's columns\r\n        setTableData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Function to format a date in \"YYYY-MM-DD\" format\r\n  const formatDate = (dateString) => {\r\n    const dateObject = new Date(dateString);\r\n    const year = dateObject.getFullYear();\r\n    const month = String(dateObject.getMonth() + 1).padStart(2, '0'); // Month is zero-based, so add 1\r\n    const day = String(dateObject.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>PostgreSQL Table - mileage_records</h1>\r\n      <table className=\"table-container\">\r\n        <thead>\r\n          <tr>\r\n            {tableColumns.map((column) => (\r\n              <th key={column}>{column}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row) => (\r\n            <tr key={row.id}>\r\n              {tableColumns.map((column) => (\r\n                <td key={column}>\r\n                  {column.toLowerCase().includes('date')\r\n                    ? formatDate(row[column]) // Apply the formatDate function to date columns\r\n                    : row[column]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mileage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\r\nimport TradingTable from './Trading-components/TradingTable';\r\nimport Calculator from './Calc-components/Calculator';\r\nimport NameAges from './NameAges';\r\nimport Home from './Home';\r\nimport TallinnTartu from './Taxi-components/TallinnTartu';\r\nimport Mileage from './Mileage';\r\n\r\n\r\nconst App = () => {\r\n\r\n  \r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <div className=\"router\">       \r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/trading\">Trading Table</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/calculator\">Calculator</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/tallinntartu\">Tallinn-Tartu</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/mileage\">Mileage</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/nameages\">NameAges</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        \r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/trading\" element={<TradingTable />} />\r\n          <Route path=\"/calculator\" element={<Calculator />} />\r\n          <Route path=\"/nameages\" element={<NameAges />} />\r\n          <Route path=\"/mileage\" element={<Mileage />} />\r\n          <Route path=\"/tallinntartu\" element={<TallinnTartu />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default App;\r\n","const isLocalhost  =  Boolean(\r\n     window.location.hostname  ===  'localhost'  ||\r\n     // [::1] is the IPv6 localhost address.\r\n     window.location.hostname  ===  '[::1]'  ||\r\n     // 127.0.0.1/8 is considered localhost for IPv4.\r\n     window.location.hostname.match(         /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/         )\r\n    );\r\n\r\nexport default function register()  {\r\n     if (process.env.NODE_ENV  ===  'production'  &&  'serviceWorker' in navigator)  {\r\n         // The URL constructor is available in all browsers that support SW.\r\n         const publicUrl  =  new URL(process.env.PUBLIC_URL,  window.location);\r\n         if (publicUrl.origin  !==  window.location.origin)  {\r\n             // Our service worker won't work if PUBLIC_URL is on a different origin\r\n             // from what our page is served on. This might happen if a CDN is used to\r\n             // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n             return;\r\n             \r\n        }\r\n\r\n         window.addEventListener('load',  () =>  {\r\n             const swUrl  =  `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n             if (isLocalhost)  {\r\n                 // This is running on localhost. Lets check if a service worker still exists or not.\r\n                 checkValidServiceWorker(swUrl);\r\n\r\n                 // Add some additional logging to localhost, pointing developers to the\r\n                 // service worker/PWA documentation.\r\n                 navigator.serviceWorker.ready.then(() =>  {\r\n                     console.log(\r\n                         'This web app is being served cache-first by a service ' +\r\n                         'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                         );\r\n                     \r\n                });\r\n                 \r\n            } else  {\r\n                 // Is not local host. Just register service worker\r\n                 registerValidSW(swUrl);\r\n                 \r\n            }\r\n             \r\n        });\r\n         \r\n    }\r\n    \r\n}\r\n\r\nfunction registerValidSW(swUrl)  {\r\n     navigator.serviceWorker\r\n     .register(swUrl)\r\n     .then(registration =>  {\r\n         registration.onupdatefound  =  () =>  {\r\n             const installingWorker  =  registration.installing;\r\n             installingWorker.onstatechange  =  () =>  {\r\n                 if (installingWorker.state  ===  'installed')  {\r\n                     if (navigator.serviceWorker.controller)  {\r\n                         // At this point, the old content will have been purged and\r\n                         // the fresh content will have been added to the cache.\r\n                         // It's the perfect time to display a \"New content is\r\n                         // available; please refresh.\" message in your web app.\r\n                         console.log('New content is available; please refresh.');\r\n                         \r\n                    } else  {\r\n                         // At this point, everything has been precached.\r\n                         // It's the perfect time to display a\r\n                         // \"Content is cached for offline use.\" message.\r\n                         console.log('Content is cached for offline use.');\r\n                         \r\n                    }\r\n                     \r\n                }\r\n                 \r\n            };\r\n             \r\n        };\r\n         \r\n    })\r\n     .catch(error =>  {\r\n         console.error('Error during service worker registration:',  error);\r\n         \r\n    });\r\n    \r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl)  {\r\n     // Check if the service worker can be found. If it can't reload the page.\r\n     fetch(swUrl)\r\n     .then(response =>  {\r\n         // Ensure service worker exists, and that we really are getting a JS file.\r\n         if (\r\n             response.status  ===  404  ||\r\n             response.headers.get('content-type').indexOf('javascript')  ===  -1\r\n             )  {\r\n             // No service worker found. Probably a different app. Reload the page.\r\n             navigator.serviceWorker.ready.then(registration =>  {\r\n                 registration.unregister().then(() =>  {\r\n                     window.location.reload();\r\n                     \r\n                });\r\n                 \r\n            });\r\n             \r\n        } else  {\r\n             // Service worker found. Proceed as normal.\r\n             registerValidSW(swUrl);\r\n             \r\n        }\r\n         \r\n    })\r\n     .catch(() =>  {\r\n         console.log(\r\n             'No internet connection found. App is running in offline mode.'\r\n             );\r\n         \r\n    });\r\n    \r\n}\r\n\r\nexport function unregister()  {\r\n     if ('serviceWorker' in navigator)  {\r\n         navigator.serviceWorker.ready.then(registration =>  {\r\n             registration.unregister();\r\n             \r\n        });\r\n         \r\n    }\r\n    \r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,document.getElementById('root'));\r\nregisterServiceWorker();"],"sourceRoot":""}